{% assign currentDay = 'Now' | Date:'dddd' | Downcase %}

{% if currentDay == "sunday" %}
    {% comment %}
    /** show SE Online LIVE **/
    {% endcomment %}
{% else %}
    {% comment %}
    /** show Easter instead **/
    {% endcomment %}
    {% assign currentDay = 'easter2020' %}
{% endif %}

{% if currentDay == "sunday" %}
    {% comment %}
        This shows on Sundays
    {% endcomment %}
    <section id="">
        <script>
          var tmpCanInitParallax = jarallax.constructor.prototype.canInitParallax;
          jarallax.constructor.prototype.canInitParallax = function(callback) {
            // Intercept the set call for the video object and manually set the image
            var imageHandler = {
              set(target, prop, value) {
                target[prop] = value;
                if (prop == 'video') {
                    value.videoImage = "/Content/0N2A1494.jpg";
                    value.userEventsList['started'][0] = function () {

                        self.image.$default_item = self.image.$item;
                        self.image.$item = self.$video;

                        // set video width and height
                        self.image.width = self.video.videoWidth || 1280;
                        self.image.height = self.video.videoHeight || 720;
                        self.options.imgWidth = self.image.width;
                        self.options.imgHeight = self.image.height;
                        self.coverImage();
                        self.clipContainer();
                        self.onScroll();

                        // hide image
                        if (self.image.$default_item) {
                            self.css(self.image.$default_item, {
                                'transition': 'opacity .25s ease-in-out',
                                '-moz-transition': 'opacity .25s ease-in-out',
                                '-webkit-transition': 'opacity .25s ease-in-out',
                                'opacity': 1,
                            });
                            setTimeout(function () {
                                self.image.$default_item.style.opacity = 0;
                            }, 500);
                        }
                    };
                }
                return true;
              }
            };
            // Use a proxy'ed JS object
            var self = new Proxy(this, imageHandler);
            self.defaultInitImgResult = true;
            self.image.src = "/Content/0N2A1494.jpg";

            // save default user styles
            var curStyle = self.$item.getAttribute('style');
            if (curStyle) {
                self.$item.setAttribute('data-jarallax-original-styles', curStyle);
            }

            // set new background
            self.css(self.$item, {
                'background-image': 'url("/Content/0N2A1494.jpg")',
                'background-position': 'center',
                'background-size': 'cover',
                'transition': 'opacity .25s ease-in-out',
                '-moz-transition': 'opacity .25s ease-in-out',
                '-webkit-transition': 'opacity .25s ease-in-out',
                'opacity': 1,
            });

            // Now actually call the method against the proxy object
            return tmpCanInitParallax.apply(self);
          }
        </script>
        <div style="background-color:black">

            {[ parallax videourl:'https://vimeo.com/357603792' image:'/Content/0N2A1494.jpg'  videostarttime:'0' videoendtime:'19' addclass:'g-bg-parallax-color--black--40 menu-switch' height:'75vh' position:'bottom center' speed:'-15' ]}
                <!-- START: Ministry Logo & Video -->
                <div class="parallax-logo centered" style="max-width: inherit;padding: 0px;">
                    <h1 class="g-font-family--secondary g-font-size-130--lg g-font-size-80--xs g-text-shadow--black--soft" style="text-shadow: none;">Streaming Now</h1>
                    <br />
                    <h4 class="uppercase g-letter-spacing--3">Watch today's sermon at SE Online</h4>
                    <br />
                    <br />
                    <a href="/online" class="uppercase se-btn se-btn--primary-brd g-letter-spacing--1">
                        <strong>Watch Here</strong>
                    </a>
                </div>
                <!-- END: Ministry Logo & Videod -->
            {[ endparallax ]}

        </div>
    </section>

{% elseif currentDay == "christmas" %}

    <script>
    		  var tmpCanInitParallax = jarallax.constructor.prototype.canInitParallax;
    		  jarallax.constructor.prototype.canInitParallax = function(callback) {
    		    // Intercept the set call for the video object and manually set the image
    		    var imageHandler = {
    		      set(target, prop, value) {
    		        target[prop] = value;
    		        if (prop == 'video') {
    		            value.videoImage = "/content/externalsite/webimages/christmas2019/ChristmasCover.jpg";
    		            value.userEventsList['started'][0] = function () {

    		                self.image.$default_item = self.image.$item;
    		                self.image.$item = self.$video;

    		                // set video width and height
    		                self.image.width = self.video.videoWidth || 1280;
    		                self.image.height = self.video.videoHeight || 720;
    		                self.options.imgWidth = self.image.width;
    		                self.options.imgHeight = self.image.height;
    		                self.coverImage();
    		                self.clipContainer();
    		                self.onScroll();

    		                // hide image
    		                if (self.image.$default_item) {
    		                    self.css(self.image.$default_item, {
    		                        'transition': 'opacity .25s ease-in-out',
    		                        '-moz-transition': 'opacity .25s ease-in-out',
    		                        '-webkit-transition': 'opacity .25s ease-in-out',
    		                        'opacity': 1,
    		                    });
    		                    setTimeout(function () {
    		                        self.image.$default_item.style.opacity = 0;
    		                    }, 500);
    		                }
    		            };
    		        }
    		        return true;
    		      }
    		    };
    		    // Use a proxy'ed JS object
    		    var self = new Proxy(this, imageHandler);
    		    self.defaultInitImgResult = true;
    		    self.image.src = "/content/externalsite/webimages/christmas2019/ChristmasCover.jpg";

    		    // save default user styles
    		    var curStyle = self.$item.getAttribute('style');
    		    if (curStyle) {
    		        self.$item.setAttribute('data-jarallax-original-styles', curStyle);
    		    }

    		    // set new background
    		    self.css(self.$item, {
    		        'background-image': 'url("/content/externalsite/webimages/christmas2019/ChristmasCover.jpg")',
    		        'background-position': 'center',
    		        'background-size': 'cover',
    		        'transition': 'opacity .25s ease-in-out',
    		        '-moz-transition': 'opacity .25s ease-in-out',
    		        '-webkit-transition': 'opacity .25s ease-in-out',
    		        'opacity': 1,
    		    });

    		    // Now actually call the method against the proxy object
    		    return tmpCanInitParallax.apply(self);
    		  }
    		</script>

    <div style="background-color:black">

        {[ parallax videourl:'https://vimeo.com/375492816' image:'/content/externalsite/webimages/christmas2019/ChristmasCover.jpg' addclass:'menu-switch' height:'75vh' position:'top center' speed:'-15' videostarttime:'0' videoendtime:'27' ]}
            <!-- START: Ministry Logo & Video -->
            <div class="parallax-logo centered" style="max-width: inherit;padding: 0px;">
                <img src="/content/externalsite/webimages/christmas2019/Christmas_logo_2019.svg" class="img-responsive g-width-600--xs g-width-40-percent--lg g-margin-x-auto--xs" style="max-width: 500px;" />
                <br />
                <br />
                <a href="/christmas" class="uppercase se-btn se-btn--primary-brd g-letter-spacing--1">
                    <strong>SEE CHRISTMAS TIMES</strong>
                </a>
            </div>
            <!-- END: Ministry Logo & Videod -->
        {[ endparallax ]}

    </div>

{% elseif currentDay == "easter2020" %}

        <div style="background-color:black">

            {[ parallax image:'/Content/Events/2020/Easter/flower-wall_notext.jpg' addclass:'g-bg-parallax-color--black--40 menu-switch' height:'75vh' position:'top center' speed:'-15' ]}
                <!-- START: Ministry Logo & Video -->
                <div class="parallax-logo centered" style="max-width: inherit;padding: 0px;">
                    <a href="/easter">
                        <img src="/Content/Events/2020/Easter/Easter2020_logo.svg" class="img-responsive g-width-80-percent--xs g-width-40-percent--md g-margin-x-auto--xs" style="max-width: 500px;"/>
                    </a>
                    <h4 class="uppercase g-letter-spacing--3 g-font-weight--600 g-padding-b-40--xs">Watch Easter at SE Online</h4>
                    <a href="/easter" class="uppercase se-btn se-btn--primary-brd g-letter-spacing--1">
                        <strong>Learn More</strong>
                    </a>
                </div>
                <!-- END: Ministry Logo & Videod -->
            {[ endparallax ]}

        </div>

{% else %}

    {% comment %}
        This parallax shows from Mon thru Sat - with a Sermon Message if avail.
    {% endcomment %}
    {% contentchannelitem where:'ContentChannelId == 24 && Status == 2' sort:'StartDateTime Desc' %}
    {% for item in contentchannelitemItems %}

        {% assign itemChildItems = item.ChildItems | Sort:'Order' %}
        {%- for messages in itemChildItems -%}

            {% assign message = messages.ChildContentChannelItem %}
            {% if message.ContentChannelId == "23" %}
                {% assign series = item %}
                {% break %}
            {%- endif -%}

        {%- endfor -%}
        {% break %}
    {% endfor %}
    {% endcontentchannelitem %}

    {% contentchannelitem where:'ContentChannelId == 24 && Status == 2' sort:'StartDateTime Desc' %}
    {% assign series = "" %}
    {% assign currentMessage = "" %}
    {% for item in contentchannelitemItems %}
        {% assign itemChildItems = item.ChildItems | Sort:'Order' %}
        {%- for messages in itemChildItems -%}
            {% assign message = messages.ChildContentChannelItem %}
            {% if message.ContentChannelId == "23" %}
                {% assign series = item %}
                {% assign currentMessage = message %}
                {% break %}
            {%- endif -%}
        {%- endfor -%}
        {%- if series != "" -%}
            {%- break -%}
        {%- endif -%}
    {% endfor %}
    {% endcontentchannelitem %}

    {% if series %}
    	{% assign currentDate = 'Now' | Date:'M/d/yyyy' %}
    	{% assign seriesImageGuid = series | Attribute:'SeriesImage','RawValue' %}
    	{% assign currentMessageVimeoID = currentMessage | Attribute:'VimeoId' %}
        <section id="">
    		<script>
    		  var tmpCanInitParallax = jarallax.constructor.prototype.canInitParallax;
    		  jarallax.constructor.prototype.canInitParallax = function(callback) {
    		    // Intercept the set call for the video object and manually set the image
    		    var imageHandler = {
    		      set(target, prop, value) {
    		        target[prop] = value;
    		        if (prop == 'video') {
    		            value.videoImage = "/Content/Main_homepage.jpg";
    		            value.userEventsList['started'][0] = function () {

    		                self.image.$default_item = self.image.$item;
    		                self.image.$item = self.$video;

    		                // set video width and height
    		                self.image.width = self.video.videoWidth || 1280;
    		                self.image.height = self.video.videoHeight || 720;
    		                self.options.imgWidth = self.image.width;
    		                self.options.imgHeight = self.image.height;
    		                self.coverImage();
    		                self.clipContainer();
    		                self.onScroll();

    		                // hide image
    		                if (self.image.$default_item) {
    		                    self.css(self.image.$default_item, {
    		                        'transition': 'opacity .25s ease-in-out',
    		                        '-moz-transition': 'opacity .25s ease-in-out',
    		                        '-webkit-transition': 'opacity .25s ease-in-out',
    		                        'opacity': 1,
    		                    });
    		                    setTimeout(function () {
    		                        self.image.$default_item.style.opacity = 0;
    		                    }, 500);
    		                }
    		            };
    		        }
    		        return true;
    		      }
    		    };
    		    // Use a proxy'ed JS object
    		    var self = new Proxy(this, imageHandler);
    		    self.defaultInitImgResult = true;
    		    self.image.src = "/Content/0N2A1494.jpg";

    		    // save default user styles
    		    var curStyle = self.$item.getAttribute('style');
    		    if (curStyle) {
    		        self.$item.setAttribute('data-jarallax-original-styles', curStyle);
    		    }

    		    // set new background
    		    self.css(self.$item, {
    		        'background-image': 'url("/Content/0N2A1494.jpg")',
    		        'background-position': 'center',
    		        'background-size': 'cover',
    		        'transition': 'opacity .25s ease-in-out',
    		        '-moz-transition': 'opacity .25s ease-in-out',
    		        '-webkit-transition': 'opacity .25s ease-in-out',
    		        'opacity': 1,
    		    });

    		    // Now actually call the method against the proxy object
    		    return tmpCanInitParallax.apply(self);
    		  }
    		</script>
        	<div style="background-color:black">
                {% unless currentMessageVimeoID == empty %}

                    {[ parallax videourl:'https://vimeo.com/380352381' image:'/Content/0N2A1494.jpg'  videostarttime:'0' videoendtime:'19' addclass:'g-bg-parallax-color--black--40 menu-switch' height:'75vh' position:'bottom center' speed:'-15' ]}
    					<!-- START: Ministry Logo & Video -->
                        <div class="parallax-logo centered" style="max-width: inherit;padding: 0px;">
                            <h4 class="uppercase g-letter-spacing--3">Latest Sermon</h4>
    						<hr class="g-width-80--xs">
                            <h1 class="g-font-family--secondary g-font-size-130--lg g-font-size-80--xs g-text-shadow--black--soft" style="text-shadow: none;">{{ series.Title }}</h1>
    						<br />
    						<h4 class="uppercase g-letter-spacing--3">{{ currentMessage.Title }}</h4>
                            <br />
                            <br />
    						<a href="/sermons/{{ item | Attribute: 'Slug' }}" class="uppercase se-btn se-btn--primary-brd g-letter-spacing--1">
    				            <strong>Watch Sermons</strong>
    				        </a>
                        </div>
                        <!-- END: Ministry Logo & Videod -->
                    {[ endparallax ]}

                {% endunless %}
        	</div>
        </section>
    {% else %}
    	{[ parallax image:'/Content/0N2A1494.jpg' zindex:'0' addclass:'g-bg-parallax-color--black--40 menu-switch' height:'75vh' position:'bottom center' speed:'-15' ]}
    	    <div class="parallax-logo centered" style="padding: 0px; z-index:3">
    	        <h4 class="uppercase g-letter-spacing--3">Connecting people to Jesus and one another</h4>
    	        <br />
    	        <br />
    	        <a href="/sermons" class="uppercase se-btn se-btn--primary-brd g-letter-spacing--1">
    	            <strong>Watch Sermon</strong>
    	        </a>
    	    </div>
    	{[ endparallax ]}
    {% endif %}

{% endif %}
