{% contentchannelitem where:'ContentChannelId == 24 && Status == 2' sort:'StartDateTime Desc' %}
{% assign series = "" %}
{% assign currentMessage = "" %}
{% for item in contentchannelitemItems %}
	{% assign itemChildItems = item.ChildItems | Sort:'Priority' %}
	{%- for messages in itemChildItems reversed -%}
		{% assign message = messages.ChildContentChannelItem %}
		{% if message.ContentChannelId == "23" %}
			{% assign series = item %}
			{% assign currentMessage = message %}
			{% break %}
		{%- endif -%}
	{%- endfor -%}
	{%- if series != "" -%}
		{%- break -%}
	{%- endif -%}
{% endfor %}
{% endcontentchannelitem %}

{% if series %}

	{% assign currentDate = 'Now' | Date:'M/d/yyyy' %}

	{% assign seriesImageGuid = series | Attribute:'SeriesImage','RawValue' %}
	{% assign currentMessageVimeoID = currentMessage | Attribute:'VimeoId' %}

    <section id="">
    	<div style="background-color:black">
            {% unless currentMessageVimeoID == empty %}

				<script>

				  var tmpCanInitParallax = jarallax.constructor.prototype.canInitParallax;
				  jarallax.constructor.prototype.canInitParallax = function(callback) {
					// Intercept the set call for the video object and manually set the image
					var imageHandler = {
					  set(target, prop, value) {
						target[prop] = value;
						if (prop == 'video') {
							value.videoImage = "/Content/0N2A1494.jpg";
							value.userEventsList['started'][0] = function () {

								self.image.$default_item = self.image.$item;
								self.image.$item = self.$video;

								// set video width and height
								self.image.width = self.video.videoWidth || 1280;
								self.image.height = self.video.videoHeight || 720;
								self.options.imgWidth = self.image.width;
								self.options.imgHeight = self.image.height;
								self.coverImage();
								self.clipContainer();
								self.onScroll();

								// hide image
								if (self.image.$default_item) {
									self.css(self.image.$default_item, {
										'transition': 'opacity .25s ease-in-out',
										'-moz-transition': 'opacity .25s ease-in-out',
										'-webkit-transition': 'opacity .25s ease-in-out',
										'opacity': 1,
									});
									setTimeout(function () {
										self.image.$default_item.style.opacity = 0;
									}, 500);
								}
							};
						}
						return true;
					  }
					};
					// Use a proxy'ed JS object
					var self = new Proxy(this, imageHandler);
					self.defaultInitImgResult = true;
					self.image.bgImage = 'url("/Content/0N2A1494.jpg")';

					// save default user styles
					var curStyle = self.$item.getAttribute('style');
					if (curStyle) {
						self.$item.setAttribute('data-jarallax-original-styles', curStyle);
					}

					// set new background
					self.css(self.$item, {
						'background-image': self.image.bgImage,
						'background-position': 'center',
						'background-size': 'cover',
						'transition': 'opacity .25s ease-in-out',
						'-moz-transition': 'opacity .25s ease-in-out',
						'-webkit-transition': 'opacity .25s ease-in-out',
						'opacity': 1,
					});

					// Now actually call the method against the proxy object
					return tmpCanInitParallax.apply(self);
				  }
				</script>

                {% assign videoStartTime =  currentMessage | Attribute:'VimeoPromoStartTime'  %}
				{% assign videoEndTime =  currentMessage | Attribute:'VimeoPromoEndTime'  %}
                {[ parallax videourl:'https://vimeo.com/{{ currentMessageVimeoID }}' image:'/Content/0N2A1494.jpg' videostarttime:'{{videoStartTime}}' videoendtime:'{{ videoEndTime }}' addclass:'g-bg-parallax-color--black--40 menu-switch' height:'75vh' position:'center center' speed:'-25' ]}
					<!-- START: Ministry Logo & Video -->
                    <div class="parallax-logo centered" style="max-width: inherit;padding: 0px;">
						<h5 class="uppercase g-letter-spacing--3">Latest Sermon</h5>
						<hr class="g-width-80--xs">
                        <h1 class="g-font-family--secondary g-font-size-130--lg g-font-size-80--xs g-text-shadow--black--soft" style="text-shadow: none;">{{ series.Title }}</h1>
						<br />
						<h5 class="uppercase g-letter-spacing--3">{{ currentMessage.Title }}</h5>
                        <br />
                        <br />
						<a href="{{ 'Global' | Page:'Path' }}/{{ series.PrimarySlug }}" class="uppercase se-btn se-btn--primary-brd g-letter-spacing--1">
				            <strong>Watch Sermon</strong>
				        </a>
                    </div>
                    <!-- END: Ministry Logo & Videod -->
                {[ endparallax ]}
            {% endunless %}
    	</div>
    </section>

{% else %}
	<h1>Could not find series.</h1>
{% endif %}
